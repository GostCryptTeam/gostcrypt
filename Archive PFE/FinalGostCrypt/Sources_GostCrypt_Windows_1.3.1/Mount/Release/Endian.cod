; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\Alexis\Documents\FinalGostCrypt\Sources_GostCrypt_Windows_1.3.1\Common\Endian.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_MirrorBytes16
PUBLIC	_MirrorBytes32
PUBLIC	_MirrorBytes64
PUBLIC	_LongReverse
; Function compile flags: /Ogtp
; File c:\users\alexis\documents\finalgostcrypt\sources_gostcrypt_windows_1.3.1\common\endian.c
;	COMDAT _LongReverse
_TEXT	SEGMENT
_buffer$ = 8						; size = 4
_byteCount$ = 12					; size = 4
_LongReverse PROC					; COMDAT

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 90   : 	unsigned __int32 value;
; 91   : 
; 92   : 	byteCount /= sizeof (unsigned __int32);
; 93   : 	while (byteCount--)

  00003	8b 45 0c	 mov	 eax, DWORD PTR _byteCount$[ebp]
  00006	c1 e8 02	 shr	 eax, 2
  00009	85 c0		 test	 eax, eax
  0000b	74 2e		 je	 SHORT $LN6@LongRevers
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7d 08	 mov	 edi, DWORD PTR _buffer$[ebp]
$LL2@LongRevers:

; 94   : 	{
; 95   : 		value = *buffer;

  00012	8b 17		 mov	 edx, DWORD PTR [edi]

; 96   : 		value = ((value & 0xFF00FF00L) >> 8) | \
; 97   : 		    ((value & 0x00FF00FFL) << 8);
; 98   : 		*buffer++ = (value << 16) | (value >> 16);

  00014	8d 7f 04	 lea	 edi, DWORD PTR [edi+4]
  00017	8b f2		 mov	 esi, edx
  00019	8b ca		 mov	 ecx, edx
  0001b	c1 ee 08	 shr	 esi, 8
  0001e	c1 e1 08	 shl	 ecx, 8
  00021	33 f1		 xor	 esi, ecx
  00023	c1 e2 08	 shl	 edx, 8
  00026	81 e6 ff 00 ff
	00		 and	 esi, 16711935		; 00ff00ffH
  0002c	33 f2		 xor	 esi, edx
  0002e	c1 c6 10	 rol	 esi, 16			; 00000010H
  00031	89 77 fc	 mov	 DWORD PTR [edi-4], esi
  00034	83 e8 01	 sub	 eax, 1
  00037	75 d9		 jne	 SHORT $LL2@LongRevers
  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
$LN6@LongRevers:

; 99   : 	}
; 100  : }

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_LongReverse ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\alexis\documents\finalgostcrypt\sources_gostcrypt_windows_1.3.1\common\endian.c
;	COMDAT _MirrorBytes64
_TEXT	SEGMENT
tv416 = -4						; size = 4
tv415 = -4						; size = 4
_x$ = 8							; size = 8
_MirrorBytes64 PROC					; COMDAT

; 67   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 68   : 	uint64 n = (unsigned __int8) x;
; 69   : 	n <<= 8; n |= (unsigned __int8) (x >> 8);
; 70   : 	n <<= 8; n |= (unsigned __int8) (x >> 16);
; 71   : 	n <<= 8; n |= (unsigned __int8) (x >> 24);
; 72   : 	n <<= 8; n |= (unsigned __int8) (x >> 32);
; 73   : 	n <<= 8; n |= (unsigned __int8) (x >> 40);
; 74   : 	n <<= 8; n |= (unsigned __int8) (x >> 48);
; 75   : 	return (n << 8) | (unsigned __int8) (x >> 56);

  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	8b 5d 08	 mov	 ebx, DWORD PTR _x$[ebp]
  0000a	0f b6 c3	 movzx	 eax, bl
  0000d	99		 cdq
  0000e	8b ca		 mov	 ecx, edx
  00010	8b d0		 mov	 edx, eax
  00012	0f a4 d1 10	 shld	 ecx, edx, 16
  00016	8b c3		 mov	 eax, ebx
  00018	c1 e2 10	 shl	 edx, 16			; 00000010H
  0001b	25 00 ff 00 00	 and	 eax, 65280		; 0000ff00H
  00020	0b d0		 or	 edx, eax
  00022	8b c3		 mov	 eax, ebx
  00024	0f a4 d1 10	 shld	 ecx, edx, 16
  00028	25 00 00 ff 00	 and	 eax, 16711680		; 00ff0000H
  0002d	c1 e2 10	 shl	 edx, 16			; 00000010H
  00030	0b d0		 or	 edx, eax
  00032	8b c3		 mov	 eax, ebx
  00034	0f a4 d1 10	 shld	 ecx, edx, 16
  00038	25 00 00 00 ff	 and	 eax, -16777216		; ff000000H
  0003d	c1 e2 10	 shl	 edx, 16			; 00000010H
  00040	0b d0		 or	 edx, eax
  00042	0f a4 d1 08	 shld	 ecx, edx, 8
  00046	89 4d fc	 mov	 DWORD PTR tv416[ebp], ecx
  00049	8b 4d 0c	 mov	 ecx, DWORD PTR _x$[ebp+4]
  0004c	8b f1		 mov	 esi, ecx
  0004e	81 e6 00 00 ff
	00		 and	 esi, 16711680		; 00ff0000H
  00054	c1 e2 08	 shl	 edx, 8
  00057	8b c1		 mov	 eax, ecx
  00059	81 e1 00 ff 00
	00		 and	 ecx, 65280		; 0000ff00H
  0005f	0f ac c3 10	 shrd	 ebx, eax, 16
  00063	33 ff		 xor	 edi, edi
  00065	0b fb		 or	 edi, ebx
  00067	c1 e8 10	 shr	 eax, 16			; 00000010H
  0006a	0b f0		 or	 esi, eax
  0006c	0f ac f7 10	 shrd	 edi, esi, 16
  00070	c1 ee 10	 shr	 esi, 16			; 00000010H
  00073	0b f1		 or	 esi, ecx
  00075	0f b6 4d 0c	 movzx	 ecx, BYTE PTR _x$[ebp+4]
  00079	0f ac f7 10	 shrd	 edi, esi, 16
  0007d	c1 ee 10	 shr	 esi, 16			; 00000010H
  00080	0b f1		 or	 esi, ecx
  00082	8b 4d fc	 mov	 ecx, DWORD PTR tv416[ebp]
  00085	0f ac f7 08	 shrd	 edi, esi, 8
  00089	0b d7		 or	 edx, edi
  0008b	c1 ee 08	 shr	 esi, 8
  0008e	5f		 pop	 edi
  0008f	0b ce		 or	 ecx, esi
  00091	8b c2		 mov	 eax, edx
  00093	5e		 pop	 esi
  00094	8b d1		 mov	 edx, ecx
  00096	5b		 pop	 ebx

; 76   : }

  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
_MirrorBytes64 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\alexis\documents\finalgostcrypt\sources_gostcrypt_windows_1.3.1\common\endian.c
;	COMDAT _MirrorBytes32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_MirrorBytes32 PROC					; COMDAT

; 50   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 51   : 	unsigned __int32 n = (unsigned __int8) x;
; 52   : 	n <<= 8; n |= (unsigned __int8) (x >> 8);

  00004	8b 5d 08	 mov	 ebx, DWORD PTR _x$[ebp]
  00007	8b c3		 mov	 eax, ebx
  00009	c1 e8 08	 shr	 eax, 8

; 53   : 	n <<= 8; n |= (unsigned __int8) (x >> 16);

  0000c	8b cb		 mov	 ecx, ebx
  0000e	0f b6 d0	 movzx	 edx, al
  00011	0f b6 c3	 movzx	 eax, bl

; 54   : 	return (n << 8) | (unsigned __int8) (x >> 24);

  00014	c1 e0 08	 shl	 eax, 8
  00017	0b c2		 or	 eax, edx
  00019	c1 e9 10	 shr	 ecx, 16			; 00000010H
  0001c	c1 e0 08	 shl	 eax, 8
  0001f	0f b6 c9	 movzx	 ecx, cl
  00022	0b c1		 or	 eax, ecx
  00024	c1 eb 18	 shr	 ebx, 24			; 00000018H
  00027	c1 e0 08	 shl	 eax, 8
  0002a	0b c3		 or	 eax, ebx
  0002c	5b		 pop	 ebx

; 55   : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
_MirrorBytes32 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\alexis\documents\finalgostcrypt\sources_gostcrypt_windows_1.3.1\common\endian.c
;	COMDAT _MirrorBytes16
_TEXT	SEGMENT
_x$ = 8							; size = 2
_MirrorBytes16 PROC					; COMDAT

; 36   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 37   : 	return (x << 8) | (x >> 8);

  00003	0f b7 4d 08	 movzx	 ecx, WORD PTR _x$[ebp]
  00007	8b c1		 mov	 eax, ecx
  00009	c1 e1 08	 shl	 ecx, 8
  0000c	c1 e8 08	 shr	 eax, 8
  0000f	0b c1		 or	 eax, ecx

; 38   : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
_MirrorBytes16 ENDP
_TEXT	ENDS
END
