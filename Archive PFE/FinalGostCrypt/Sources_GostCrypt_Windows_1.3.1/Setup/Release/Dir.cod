; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\Alexis\Desktop\Sources_GostCrypt_Windows_1.3.1_COMMENTED\Sources_GostCrypt_Windows_1.3.1é\Sources_GostCrypt_Windows_1.3.1\Setup\Dir.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_mkfulldir
PUBLIC	_mkfulldir_internal
PUBLIC	??_C@_02HHAEMJFE@?2?1?$AA@			; `string'
PUBLIC	??_C@_01KICIPPFI@?2?$AA@			; `string'
EXTRN	_strrchr:PROC
EXTRN	_strtok:PROC
EXTRN	__stat64i32:PROC
EXTRN	__mkdir:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___security_cookie:DWORD
_BSS	SEGMENT
?tokpath@?1??mkfulldir_internal@@9@9 DB 0104H DUP (?)	; `mkfulldir_internal'::`2'::tokpath
?trail@?1??mkfulldir_internal@@9@9 DB 0104H DUP (?)	; `mkfulldir_internal'::`2'::trail
_BSS	ENDS
;	COMDAT ??_C@_01KICIPPFI@?2?$AA@
CONST	SEGMENT
??_C@_01KICIPPFI@?2?$AA@ DB '\', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HHAEMJFE@?2?1?$AA@
CONST	SEGMENT
??_C@_02HHAEMJFE@?2?1?$AA@ DB '\/', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File c:\users\alexis\desktop\sources_gostcrypt_windows_1.3.1_commented\sources_gostcrypt_windows_1.3.1é\sources_gostcrypt_windows_1.3.1\setup\dir.c
;	COMDAT _mkfulldir_internal
_TEXT	SEGMENT
_st$ = -52						; size = 48
__$ArrayPad$ = -4					; size = 4
_path$ = 8						; size = 4
_mkfulldir_internal PROC				; COMDAT

; 69   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	8b 5d 08	 mov	 ebx, DWORD PTR _path$[ebp]

; 70   : 	char *token;
; 71   : 	struct _stat st;
; 72   : 	static char tokpath[_MAX_PATH];
; 73   : 	static char trail[_MAX_PATH];
; 74   : 
; 75   : 	strcpy (tokpath, path);

  00014	ba 00 00 00 00	 mov	 edx, OFFSET ?tokpath@?1??mkfulldir_internal@@9@9
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b cb		 mov	 ecx, ebx
  0001d	2b d3		 sub	 edx, ebx
  0001f	90		 npad	 1
$LL8@mkfulldir_:
  00020	8a 01		 mov	 al, BYTE PTR [ecx]
  00022	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00025	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00029	84 c0		 test	 al, al
  0002b	75 f3		 jne	 SHORT $LL8@mkfulldir_

; 76   : 	trail[0] = '\0';
; 77   : 
; 78   : 	token = strtok (tokpath, "\\/");

  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  00032	68 00 00 00 00	 push	 OFFSET ?tokpath@?1??mkfulldir_internal@@9@9
  00037	a2 00 00 00 00	 mov	 BYTE PTR ?trail@?1??mkfulldir_internal@@9@9, al
  0003c	e8 00 00 00 00	 call	 _strtok
  00041	83 c4 08	 add	 esp, 8

; 79   : 
; 80   : 	if (tokpath[0] == '\\' && tokpath[1] == '\\')

  00044	80 3d 00 00 00
	00 5c		 cmp	 BYTE PTR ?tokpath@?1??mkfulldir_internal@@9@9, 92 ; 0000005cH
  0004b	0f 85 d1 00 00
	00		 jne	 $LN32@mkfulldir_
  00051	80 3d 01 00 00
	00 5c		 cmp	 BYTE PTR ?tokpath@?1??mkfulldir_internal@@9@9+1, 92 ; 0000005cH
  00058	0f 85 c4 00 00
	00		 jne	 $LN32@mkfulldir_

; 81   : 	{			/* unc */
; 82   : 		trail[0] = tokpath[0];

  0005e	66 c7 05 00 00
	00 00 5c 5c	 mov	 WORD PTR ?trail@?1??mkfulldir_internal@@9@9, 23644 ; 00005c5cH

; 83   : 		trail[1] = tokpath[1];
; 84   : 		trail[2] = '\0';
; 85   : 		strcat (trail, token);

  00067	8b f0		 mov	 esi, eax
  00069	c6 05 02 00 00
	00 00		 mov	 BYTE PTR ?trail@?1??mkfulldir_internal@@9@9+2, 0
$LL20@mkfulldir_:
  00070	8a 08		 mov	 cl, BYTE PTR [eax]
  00072	40		 inc	 eax
  00073	84 c9		 test	 cl, cl
  00075	75 f9		 jne	 SHORT $LL20@mkfulldir_
  00077	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  0007c	2b c6		 sub	 eax, esi
  0007e	4f		 dec	 edi
  0007f	90		 npad	 1
$LL21@mkfulldir_:
  00080	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00083	47		 inc	 edi
  00084	84 c9		 test	 cl, cl
  00086	75 f8		 jne	 SHORT $LL21@mkfulldir_
  00088	8b c8		 mov	 ecx, eax
  0008a	c1 e9 02	 shr	 ecx, 2
  0008d	f3 a5		 rep movsd
  0008f	8b c8		 mov	 ecx, eax
  00091	83 e1 03	 and	 ecx, 3
  00094	f3 a4		 rep movsb

; 86   : 		strcat (trail, "\\");

  00096	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  0009b	4f		 dec	 edi
  0009c	0f 1f 40 00	 npad	 4
$LL22@mkfulldir_:
  000a0	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  000a3	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  000a6	84 c0		 test	 al, al
  000a8	75 f6		 jne	 SHORT $LL22@mkfulldir_
  000aa	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01KICIPPFI@?2?$AA@

; 87   : 		token = strtok (NULL, "\\/");

  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  000b5	6a 00		 push	 0
  000b7	66 89 07	 mov	 WORD PTR [edi], ax
  000ba	e8 00 00 00 00	 call	 _strtok
  000bf	8b d0		 mov	 edx, eax
  000c1	83 c4 08	 add	 esp, 8

; 88   : 		if (token)

  000c4	85 d2		 test	 edx, edx
  000c6	74 4b		 je	 SHORT $LN5@mkfulldir_

; 89   : 		{		/* get share name */
; 90   : 			strcat (trail, token);

  000c8	8b f2		 mov	 esi, edx
  000ca	66 0f 1f 44 00
	00		 npad	 6
$LL23@mkfulldir_:
  000d0	8a 02		 mov	 al, BYTE PTR [edx]
  000d2	42		 inc	 edx
  000d3	84 c0		 test	 al, al
  000d5	75 f9		 jne	 SHORT $LL23@mkfulldir_
  000d7	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  000dc	2b d6		 sub	 edx, esi
  000de	4f		 dec	 edi
  000df	90		 npad	 1
$LL24@mkfulldir_:
  000e0	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  000e3	47		 inc	 edi
  000e4	84 c0		 test	 al, al
  000e6	75 f8		 jne	 SHORT $LL24@mkfulldir_
  000e8	8b ca		 mov	 ecx, edx
  000ea	c1 e9 02	 shr	 ecx, 2
  000ed	f3 a5		 rep movsd
  000ef	8b ca		 mov	 ecx, edx
  000f1	83 e1 03	 and	 ecx, 3
  000f4	f3 a4		 rep movsb

; 91   : 			strcat (trail, "\\");

  000f6	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  000fb	4f		 dec	 edi
  000fc	0f 1f 40 00	 npad	 4
$LL25@mkfulldir_:
  00100	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00103	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  00106	84 c0		 test	 al, al
  00108	75 f6		 jne	 SHORT $LL25@mkfulldir_
  0010a	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01KICIPPFI@?2?$AA@
  00110	66 89 07	 mov	 WORD PTR [edi], ax
$LN5@mkfulldir_:

; 92   : 		}
; 93   : 		token = strtok (NULL, "\\/");

  00113	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  00118	6a 00		 push	 0
  0011a	e8 00 00 00 00	 call	 _strtok
  0011f	83 c4 08	 add	 esp, 8
$LN32@mkfulldir_:

; 94   : 	}
; 95   : 
; 96   : 	if (tokpath[1] == ':')

  00122	80 3d 01 00 00
	00 3a		 cmp	 BYTE PTR ?tokpath@?1??mkfulldir_internal@@9@9+1, 58 ; 0000003aH
  00129	75 57		 jne	 SHORT $LN14@mkfulldir_

; 97   : 	{			/* drive letter */
; 98   : 		strcat (trail, tokpath);

  0012b	ba 00 00 00 00	 mov	 edx, OFFSET ?tokpath@?1??mkfulldir_internal@@9@9
  00130	8b f2		 mov	 esi, edx
$LL26@mkfulldir_:
  00132	8a 02		 mov	 al, BYTE PTR [edx]
  00134	42		 inc	 edx
  00135	84 c0		 test	 al, al
  00137	75 f9		 jne	 SHORT $LL26@mkfulldir_
  00139	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  0013e	2b d6		 sub	 edx, esi
  00140	4f		 dec	 edi
$LL27@mkfulldir_:
  00141	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00144	47		 inc	 edi
  00145	84 c0		 test	 al, al
  00147	75 f8		 jne	 SHORT $LL27@mkfulldir_
  00149	8b ca		 mov	 ecx, edx
  0014b	c1 e9 02	 shr	 ecx, 2
  0014e	f3 a5		 rep movsd
  00150	8b ca		 mov	 ecx, edx
  00152	83 e1 03	 and	 ecx, 3
  00155	f3 a4		 rep movsb

; 99   : 		strcat (trail, "\\");

  00157	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  0015c	4f		 dec	 edi
  0015d	0f 1f 00	 npad	 3
$LL28@mkfulldir_:
  00160	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00163	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  00166	84 c0		 test	 al, al
  00168	75 f6		 jne	 SHORT $LL28@mkfulldir_
  0016a	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01KICIPPFI@?2?$AA@

; 100  : 		token = strtok (NULL, "\\/");

  00170	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  00175	6a 00		 push	 0
  00177	66 89 07	 mov	 WORD PTR [edi], ax
  0017a	e8 00 00 00 00	 call	 _strtok
  0017f	83 c4 08	 add	 esp, 8
$LN14@mkfulldir_:

; 101  : 	}
; 102  : 
; 103  : 	while (token != NULL)

  00182	85 c0		 test	 eax, eax
  00184	74 60		 je	 SHORT $LN3@mkfulldir_
$LL2@mkfulldir_:

; 104  : 	{
; 105  : 		int x;
; 106  : 		strcat (trail, token);

  00186	8b f0		 mov	 esi, eax
$LL29@mkfulldir_:
  00188	8a 08		 mov	 cl, BYTE PTR [eax]
  0018a	40		 inc	 eax
  0018b	84 c9		 test	 cl, cl
  0018d	75 f9		 jne	 SHORT $LL29@mkfulldir_
  0018f	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  00194	2b c6		 sub	 eax, esi
  00196	4f		 dec	 edi
$LL30@mkfulldir_:
  00197	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  0019a	47		 inc	 edi
  0019b	84 c9		 test	 cl, cl
  0019d	75 f8		 jne	 SHORT $LL30@mkfulldir_
  0019f	8b c8		 mov	 ecx, eax
  001a1	c1 e9 02	 shr	 ecx, 2
  001a4	f3 a5		 rep movsd
  001a6	8b c8		 mov	 ecx, eax
  001a8	83 e1 03	 and	 ecx, 3
  001ab	f3 a4		 rep movsb

; 107  : 		x = _mkdir (trail);

  001ad	68 00 00 00 00	 push	 OFFSET ?trail@?1??mkfulldir_internal@@9@9
  001b2	e8 00 00 00 00	 call	 __mkdir

; 108  : 		strcat (trail, "\\");

  001b7	bf 00 00 00 00	 mov	 edi, OFFSET ?trail@?1??mkfulldir_internal@@9@9
  001bc	83 c4 04	 add	 esp, 4
  001bf	4f		 dec	 edi
$LL31@mkfulldir_:
  001c0	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  001c3	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  001c6	84 c0		 test	 al, al
  001c8	75 f6		 jne	 SHORT $LL31@mkfulldir_
  001ca	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01KICIPPFI@?2?$AA@

; 109  : 		token = strtok (NULL, "\\/");

  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_02HHAEMJFE@?2?1?$AA@
  001d5	6a 00		 push	 0
  001d7	66 89 07	 mov	 WORD PTR [edi], ax
  001da	e8 00 00 00 00	 call	 _strtok
  001df	83 c4 08	 add	 esp, 8
  001e2	85 c0		 test	 eax, eax
  001e4	75 a0		 jne	 SHORT $LL2@mkfulldir_
$LN3@mkfulldir_:

; 110  : 	}
; 111  : 
; 112  : 	return _stat (path, &st);

  001e6	8d 45 cc	 lea	 eax, DWORD PTR _st$[ebp]
  001e9	50		 push	 eax
  001ea	53		 push	 ebx
  001eb	e8 00 00 00 00	 call	 __stat64i32

; 113  : }

  001f0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f3	83 c4 08	 add	 esp, 8
  001f6	33 cd		 xor	 ecx, ebp
  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi
  001fa	5b		 pop	 ebx
  001fb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00200	8b e5		 mov	 esp, ebp
  00202	5d		 pop	 ebp
  00203	c3		 ret	 0
_mkfulldir_internal ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\alexis\desktop\sources_gostcrypt_windows_1.3.1_commented\sources_gostcrypt_windows_1.3.1é\sources_gostcrypt_windows_1.3.1\setup\dir.c
;	COMDAT _mkfulldir
_TEXT	SEGMENT
_st$ = -312						; size = 48
_path$ = -264						; size = 260
__$ArrayPad$ = -4					; size = 4
_oriPath$ = 8						; size = 4
_bCheckonly$ = 12					; size = 4
_mkfulldir PROC						; COMDAT

; 35   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 38 01 00
	00		 sub	 esp, 312		; 00000138H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 36   : 	struct _stat st;
; 37   : 	char *uniq_file;
; 38   : 	char path [GST_MAX_PATH];
; 39   : 
; 40   : 	strcpy (path, oriPath);

  00013	8b 4d 08	 mov	 ecx, DWORD PTR _oriPath$[ebp]
  00016	8d 95 f8 fe ff
	ff		 lea	 edx, DWORD PTR _path$[ebp]
  0001c	2b d1		 sub	 edx, ecx
  0001e	66 90		 npad	 2
$LL10@mkfulldir:
  00020	8a 01		 mov	 al, BYTE PTR [ecx]
  00022	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00025	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00029	84 c0		 test	 al, al
  0002b	75 f3		 jne	 SHORT $LL10@mkfulldir

; 41   : 
; 42   : 	if (strlen (path) == 3 && path[1] == ':')

  0002d	8d 8d f8 fe ff
	ff		 lea	 ecx, DWORD PTR _path$[ebp]
  00033	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL14@mkfulldir:
  00036	8a 01		 mov	 al, BYTE PTR [ecx]
  00038	41		 inc	 ecx
  00039	84 c0		 test	 al, al
  0003b	75 f9		 jne	 SHORT $LL14@mkfulldir
  0003d	2b ca		 sub	 ecx, edx
  0003f	83 f9 03	 cmp	 ecx, 3
  00042	75 09		 jne	 SHORT $LN2@mkfulldir
  00044	80 bd f9 fe ff
	ff 3a		 cmp	 BYTE PTR _path$[ebp+1], 58 ; 0000003aH
  0004b	74 39		 je	 SHORT $is_root$17
$LN2@mkfulldir:

; 43   : 		goto is_root;	/* keep final slash in root if present */
; 44   : 
; 45   : 	/* strip final forward or backslash if we have one! */
; 46   : 	uniq_file = strrchr (path, '\\');

  0004d	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  00053	6a 5c		 push	 92			; 0000005cH
  00055	50		 push	 eax
  00056	e8 00 00 00 00	 call	 _strrchr
  0005b	83 c4 08	 add	 esp, 8

; 47   : 	if (uniq_file && uniq_file[1] == '\0')

  0005e	85 c0		 test	 eax, eax
  00060	74 06		 je	 SHORT $LN3@mkfulldir
  00062	80 78 01 00	 cmp	 BYTE PTR [eax+1], 0
  00066	74 1b		 je	 SHORT $LN15@mkfulldir
$LN3@mkfulldir:

; 48   : 		uniq_file[0] = '\0';
; 49   : 	else
; 50   : 	{
; 51   : 		uniq_file = strrchr (path, '/');

  00068	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  0006e	6a 2f		 push	 47			; 0000002fH
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 _strrchr
  00076	83 c4 08	 add	 esp, 8

; 52   : 		if (uniq_file && uniq_file[1] == '\0')

  00079	85 c0		 test	 eax, eax
  0007b	74 09		 je	 SHORT $is_root$17
  0007d	80 78 01 00	 cmp	 BYTE PTR [eax+1], 0
  00081	75 03		 jne	 SHORT $is_root$17
$LN15@mkfulldir:

; 53   : 			uniq_file[0] = '\0';

  00083	c6 00 00	 mov	 BYTE PTR [eax], 0
$is_root$17:

; 54   : 	}
; 55   : 
; 56   :       is_root:
; 57   : 	if (bCheckonly)
; 58   : 		return _stat (path, &st);

  00086	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _st$[ebp]
  0008c	50		 push	 eax
  0008d	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 __stat64i32
  00099	83 c4 08	 add	 esp, 8
  0009c	83 7d 0c 00	 cmp	 DWORD PTR _bCheckonly$[ebp], 0
  000a0	75 23		 jne	 SHORT $LN8@mkfulldir

; 59   : 
; 60   : 	if (_stat (path, &st))

  000a2	85 c0		 test	 eax, eax
  000a4	74 1d		 je	 SHORT $LN7@mkfulldir

; 61   : 		return mkfulldir_internal (path);

  000a6	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _path$[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 _mkfulldir_internal
  000b2	83 c4 04	 add	 esp, 4

; 64   : }

  000b5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000b8	33 cd		 xor	 ecx, ebp
  000ba	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000bf	8b e5		 mov	 esp, ebp
  000c1	5d		 pop	 ebp
  000c2	c3		 ret	 0
$LN7@mkfulldir:

; 62   : 	else
; 63   : 		return 0;

  000c3	33 c0		 xor	 eax, eax
$LN8@mkfulldir:

; 64   : }

  000c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c8	33 cd		 xor	 ecx, ebp
  000ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
_mkfulldir ENDP
_TEXT	ENDS
END
